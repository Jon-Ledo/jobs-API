openapi: 3.0.0

info:
  title: Jobs-Api

  contact: {}

  version: '1.0'

servers:
  - url: https://job-board-api-project.herokuapp.com/api/v1

    variables: {}

paths:
  /auth/login:
    post:
      tags:
        - Auth

      summary: Login

      operationId: Login

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginRequest'

                - example:
                    email: cindi@email.com

                    password: password

            example:
              email: cindi@email.com

              password: password

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security: []

  /auth/register:
    post:
      tags:
        - Auth

      summary: Register User

      operationId: RegisterUser

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterUserRequest'

                - example:
                    name: Dragon

                    email: cindi445@email.com

                    password: password

            example:
              name: Dragon

              email: cindi445@email.com

              password: password

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security: []

  /jobs:
    post:
      tags:
        - Jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateJobRequest'

                - example:
                    company: netflix

                    position: clown tester

            example:
              company: netflix

              position: clown tester

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    get:
      tags:
        - Jobs

      summary: Get Jobs

      operationId: GetJobs

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/{id}:
    parameters:
      - in: path

        name: id

        schema:
          type: string

        required: true

        description: The job ID

    get:
      tags:
        - Jobs

      summary: Get job by ID

      operationId: GetjobbyID

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    # /jobs/{id}:
    #   parameters:
    #     - in: path
    #       name: id
    #       schema:
    #         type: string
    #       required: true
    #       description: The job ID

    patch:
      tags:
        - Jobs

      summary: Edit a job

      operationId: Editajob

      parameters: []

      requestBody:
        description: ''

        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EditajobRequest'

                - example:
                    company: Patch/Update

                    position: patching...

            example:
              company: Patch/Update

              position: patching...

        required: true

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

    # /jobs/{id}:
    #   parameters:
    #     - in: path
    #       name: id
    #       schema:
    #         type: string
    #       required: true
    #       description: The job ID

    delete:
      tags:
        - Jobs

      summary: Delete Job

      operationId: DeleteJob

      parameters: []

      responses:
        '200':
          description: ''

          headers: {}

      deprecated: false

      security:
        - bearer: []

components:
  schemas:
    LoginRequest:
      title: LoginRequest

      required:
        - email

        - password

      type: object

      properties:
        email:
          type: string

        password:
          type: string

      example:
        email: cindi@email.com

        password: password

    RegisterUserRequest:
      title: RegisterUserRequest

      required:
        - name

        - email

        - password

      type: object

      properties:
        name:
          type: string

        email:
          type: string

        password:
          type: string

      example:
        name: Dragon

        email: cindi445@email.com

        password: password

    CreateJobRequest:
      title: CreateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: netflix

        position: clown tester

    EditajobRequest:
      title: EditajobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: Patch/Update

        position: patching...

  securitySchemes:
    bearer:
      type: http

      scheme: bearer

security: []

tags:
  - name: Auth

    description: ''

  - name: Jobs

    description: ''
